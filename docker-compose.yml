
services:
  db:
    image: postgres:15-alpine
    container_name: abmci_db
    env_file: .env
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 6

  redis:
    image: redis:7-alpine
    container_name: abmci_redis
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: abmciweb
    env_file: .env.prod
    environment:
      DJANGO_SETTINGS_MODULE: abmci.settings.prod
      # Channels en prod: configure Redis layer côté settings PROD !
      # CHANNEL_LAYERS__default__BACKEND: channels_redis.core.RedisChannelLayer
      # CHANNEL_LAYERS__default__CONFIG__hosts__0: redis://redis:6379/0
    command: >
      daphne -b 0.0.0.0 -p 8000 abmci.asgi:application
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - static_data:/app/staticfiles
      - media_data:/app/media

#  nginx:
#    image: nginx:alpine
#    container_name: abmci_nginx
#    depends_on:
#      - web
#    ports:
#      - "80:80"
#    volumes:
#      - static_data:/var/www/static
#      - media_data:/var/www/media
#      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro

volumes:
  db_data:
  redis_data:
  static_data:
  media_data: